datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String @id @default(cuid()) @map("user_id")
  email     String @unique
  firstName String @map("first_name")
  lastName  String @map("last_name")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  password        Password?
  recoveryCodes   RecoveryCode[]
  multiFactor     MultiFactor?
  multiFactorTopt MultiFactorTopt?

  @@map("user")
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique

  @@map("password")
}

model MultiFactor {
  id     String @id @default(cuid()) @map("multi_factor_id")
  method String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique @map("user_id")

  MultiFactorTopt MultiFactorTopt?

  @@map("multi_factor")
}

model MultiFactorTopt {
  id     String @id @map("multi_factor_totp_id")
  secret String

  multiFactor MultiFactor @relation(fields: [id], references: [id], onDelete: Cascade)

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique @map("user_id")

  @@map("multi_factor_topt")
}

model RecoveryCode {
  hash   String    @unique
  usedAt DateTime?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @map("user_id")

  @@index(hash)
  @@map("recovery_code")
}
